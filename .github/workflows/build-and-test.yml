# 워크플로우의 이름을 지정합니다. GitHub Actions 탭에서 이 이름으로 표시됩니다.
name: Java CI with Gradle

# 어떤 이벤트가 발생했을 때 이 워크플로우를 실행할지 정의합니다.
on:
  push:
    branches-ignore: # 'main' 브랜치는 무시
      - 'main'
  pull_request:
    branches: [ "main" ] # 'main' 브랜치로 PR을 보낼 때 실행

# 워크플로우에서 실행될 작업(Job)들을 정의합니다.
jobs:
  # "build"라는 이름의 작업을 정의합니다.
  build:
    # 이 작업이 실행될 가상 환경을 지정합니다. (Ubuntu 최신 버전)
    runs-on: ubuntu-latest

    # 작업 내에서 실행될 단계(Step)들을 순서대로 정의합니다.
    steps:
    # 1. GitHub 저장소의 코드를 가상 환경으로 내려받습니다.
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Java 17 버전을 설치합니다. (프로젝트 설정에 맞게 변경)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. gradlew 파일에 실행 권한을 부여합니다. (CI 환경에서 필수).
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # 4. Gradle을 사용하여 프로젝트를 빌드하고 테스트를 실행합니다.
    #    'build' 태스크는 'test' 태스크를 포함하므로, 모든 테스트가 자동으로 실행됩니다.
    - name: Build with Gradle
      run: ./gradlew build